{"version":3,"sources":["components/tracking/index.js","components/IdeNavbar.jsx","components/IdeEditor.jsx","components/IdeInput.jsx","components/IdeOutput.jsx","components/IdeModal.jsx","api/run.js","api/share.js","components/Ide.jsx","App.js","serviceWorker.js","index.js","components/pkLogo.svg"],"names":["Event","category","action","label","ReactGA","event","IdeNavbar","languageName","50","54","71","62","63","68","82","sizeName","14","16","18","20","handleLanguage","languageId","props","triggerLanguageUpdate","handleFontSize","fontSize","triggerFontSizeUpdate","handleShareCode","code","shareCode","alert","this","Navbar","variant","expand","className","Brand","href","src","logo","alt","Toggle","aria-controls","Collapse","id","Nav","DropdownButton","title","onSelect","Dropdown","Item","eventKey","Button","onClick","Component","IdeEditor","modes","handleChange","aceEditor","current","editor","getValue","triggerCodeUpdate","handleClick","run","React","createRef","state","isEmpty","resize","size","disabled","isLoading","Spinner","as","animation","role","aria-hidden","ref","onChange","mode","theme","showPrintMargin","showGutter","focus","highlightActiveLine","placeholder","width","height","value","setOptions","tabSize","undefined","length","IdeInput","triggerInputUpdate","target","input","bind","type","IdeOutput","output","statusId","isError","result","console","log","readOnly","name","style","color","position","top","left","IdeModal","showModal","triggerModalShowUpdate","hideModal","copyTextToClipboard","link","window","location","protocol","host","shareId","textField","document","createElement","innerHTML","body","appendChild","select","setSelectionRange","execCommand","remove","origin","process","Modal","show","modalShow","Header","closeButton","Title","Body","Footer","axios","require","language_id","source_code","stdin","a","post","message","share","getShare","get","Ide","updateLanguage","setState","updateFontSize","Number","updateCode","updateInput","updateResult","updateOutput","updateShareId","updateIsError","updateWidth","innerWidth","updateIsLoading","bool","updateModalShow","runCode","data","stdout","stderr","error","compile_output","status","_id","getSharedCode","addEventListener","passive","search","URLSearchParams","removeEventListener","split","allowResize","minSize","maxSize","defaultSize","App","trackingID","initialize","pageview","pathname","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.a7ed07b8.chunk.js","sourcesContent":["import ReactGA from \"react-ga\";\n\nexport const initGA = (trackingID) => {\n    ReactGA.initialize(trackingID);\n}\n\nexport const PageView = () => {\n    ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nexport const Event = (category, action, label) => {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label\n    });\n};","import React, { Component } from \"react\";\nimport { Event } from \"./tracking\";\nimport { Button, Navbar, Nav, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport \"./IdeNavbar.css\";\nimport logo from \"./pkLogo.svg\";\n\nclass IdeNavbar extends Component {\n  languageName = {\n    50: \"C (GCC 9.2.0)\",\n    54: \"C++ (GCC 9.2.0)\",\n    71: \"Python (3.8.1)\",\n    62: \"Java (OpenJDK 13.0.1)\",\n    63: \"JavaScript (Node.js 12.14.0)\",\n    68: \"PHP (7.4.1)\",\n    82: \"SQL (SQLite 3.27.2)\",\n  };\n\n  sizeName = {\n    14: \"14px\",\n    16: \"16px\",\n    18: \"18px\",\n    20: \"20px\",\n  };\n\n  handleLanguage = (languageId) => {\n    this.props.triggerLanguageUpdate(languageId);\n  };\n\n  handleFontSize = (fontSize) => {\n    this.props.triggerFontSizeUpdate(fontSize);\n  };\n\n  handleShareCode = () => {\n    if (this.props.code) {\n      this.props.shareCode();\n      Event(\"Share\", \"Code Shared Button\", \"IDE_PAGE\");\n    } else {\n      alert(\"Editor is empty!\");\n    }\n  };\n\n  render() {\n    const { languageId, fontSize } = this.props;\n    return (\n      <Navbar variant=\"dark\" expand=\"lg\" className=\"Navbar\">\n        <Navbar.Brand href=\"#home\" className=\"NavbarBrand\">\n          <img src={logo} alt=\"logo\" className=\"Logo\" />\n          &nbsp; <h1 className=\"BrandName\">Pravin IDE</h1>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <DropdownButton className=\"languageBtn\" title={this.languageName[languageId]} onSelect={this.handleLanguage}>\n              <Dropdown.Item className={languageId === \"50\" ? \"selected\" : \"\"} eventKey=\"50\">\n                C (GCC 9.2.0)\n              </Dropdown.Item>\n              <Dropdown.Item className={languageId === \"54\" ? \"selected\" : \"\"} eventKey=\"54\">\n                C++ (GCC 9.2.0)\n              </Dropdown.Item>\n              <Dropdown.Item className={languageId === \"71\" ? \"selected\" : \"\"} eventKey=\"71\">\n                Python (3.8.1)\n              </Dropdown.Item>\n              <Dropdown.Item className={languageId === \"62\" ? \"selected\" : \"\"} eventKey=\"62\">\n                Java (OpenJDK 13.0.1)\n              </Dropdown.Item>\n              <Dropdown.Item className={languageId === \"63\" ? \"selected\" : \"\"} eventKey=\"63\">\n                JavaScript (Node.js 12.14.0)\n              </Dropdown.Item>\n              <Dropdown.Item className={languageId === \"68\" ? \"selected\" : \"\"} eventKey=\"68\">\n                PHP (7.4.1)\n              </Dropdown.Item>\n              <Dropdown.Item className={languageId === \"82\" ? \"selected\" : \"\"} eventKey=\"82\">\n                SQL (SQLite 3.27.2)\n              </Dropdown.Item>\n            </DropdownButton>\n\n            <DropdownButton className=\"fontSizeBtn\" title={this.sizeName[fontSize]} onSelect={this.handleFontSize}>\n              <Dropdown.Item className={fontSize === \"14\" ? \"selected\" : \"\"} eventKey=\"14\">\n                14px\n              </Dropdown.Item>\n              <Dropdown.Item className={fontSize === \"16\" ? \"selected\" : \"\"} eventKey=\"16\">\n                16px\n              </Dropdown.Item>\n              <Dropdown.Item className={fontSize === \"18\" ? \"selected\" : \"\"} eventKey=\"18\">\n                18px\n              </Dropdown.Item>\n              <Dropdown.Item className={fontSize === \"20\" ? \"selected\" : \"\"} eventKey=\"20\">\n                20px\n              </Dropdown.Item>\n            </DropdownButton>\n\n            <Button className=\"share\" onClick={this.handleShareCode}>\n              <i className=\"fas fa-share-alt\"></i>\n            </Button>\n\n            <Button className=\"login\" onClick={this.handleShareCode}>\n              Login\n            </Button>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default IdeNavbar;\n","import React, { Component } from \"react\";\nimport { Event } from \"./tracking\";\nimport AceEditor from \"react-ace\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport \"./IdeEditor.css\";\n\nimport \"ace-builds/src-min-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-min-noconflict/mode-python\";\nimport \"ace-builds/src-min-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\n\nimport \"ace-builds/webpack-resolver\";\n\nclass IdeEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.aceEditor = React.createRef();\n    this.state = {\n      isEmpty: true,\n    };\n  }\n\n  modes = {\n    50: \"c_cpp\",\n    54: \"c_cpp\",\n    62: \"java\",\n    71: \"python\",\n    68: \"php\",\n    82: \"mysql\",\n  };\n\n  handleChange = () => {\n    const code = this.aceEditor.current.editor.getValue();\n    this.props.triggerCodeUpdate(code);\n  };\n\n  handleClick = () => {\n    this.props.run();\n    Event(\"Run\", \"Code Run Button\", \"IDE_PAGE\");\n  };\n\n  componentDidUpdate() {\n    this.aceEditor.current.editor.resize();\n  }\n\n  render() {\n    const { languageId, fontSize } = this.props;\n\n    return (\n      <div className=\"IdeEditor IdeComponent\">\n        <ul className=\"EditorNav\">\n          <li>\n            <p>Your&nbsp;Code</p>\n          </li>\n          <li>\n            <Button variant=\"primary\" size=\"sm\" onClick={this.handleClick} disabled={isEmpty(this.props.code) || this.props.isLoading}>\n              {this.props.isLoading ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> : \"Run\"}\n            </Button>\n          </li>\n        </ul>\n\n        <AceEditor\n          ref={this.aceEditor}\n          onChange={this.handleChange}\n          mode={this.modes[languageId]}\n          theme=\"monokai\"\n          showPrintMargin={false}\n          showGutter={true}\n          focus={true}\n          fontSize={fontSize}\n          highlightActiveLine={false}\n          placeholder={\"Write your code Here\"}\n          width=\"100%\"\n          height=\"100%\"\n          value={this.props.code}\n          setOptions={{\n            tabSize: 4,\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst isEmpty = (code) => {\n  if (!code || code === undefined || code === \"\" || code.length === 0) return true;\n  return false;\n};\n\nexport default IdeEditor;\n","import React, { Component } from \"react\";\nimport \"./IdeInput.css\";\n\nexport class IdeInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { input: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = (event) => {\n    this.props.triggerInputUpdate(event.target.value);\n  };\n\n  render() {\n    return (\n      <div className=\"IdeComponent IdeInput\">\n        <p>Input</p>\n        <textarea type=\"text\" onChange={this.handleChange}></textarea>\n      </div>\n    );\n  }\n}\n\nexport default IdeInput;\n","import React, { Component } from \"react\";\nimport \"./IdeOutput.css\";\n\nimport { Spinner } from \"react-bootstrap\";\nexport class IdeOutput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      output: \"\",\n      statusId: \"\",\n      isError: false,\n    };\n  }\n\n  render() {\n    const spinnerStyle = { color: \"white\", position: \"absolute\", top: \"50%\", left: \"47%\" };\n    if (this.props.result) {\n      console.log(this.props.isError, this.props.output);\n    }\n    return (\n      <div className=\"IdeComponent IdeOutput\">\n        <p>Output</p>\n        <textarea readOnly name=\"output\" style={{ color: this.props.isError ? \"#ff0033\" : \"#ffffff\" }} disabled={this.props.isLoading} value={this.props.isLoading ? \"\" : this.props.output}></textarea>\n        {this.props.isLoading ? <Spinner style={spinnerStyle} className=\"spinner\" as=\"span\" animation=\"border\" size=\"lg\" role=\"status\" aria-hidden=\"true\" /> : \"Run\"}\n      </div>\n    );\n  }\n}\n\nexport default IdeOutput;\n","import React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport \"./IdeModal.css\";\n\nexport class IdeModal extends Component {\n  showModal = () => {\n    this.props.triggerModalShowUpdate(true);\n  };\n  hideModal = () => {\n    this.props.triggerModalShowUpdate(false);\n  };\n\n  copyTextToClipboard = () => {\n    const link = `${window.location.protocol}//${window.location.host}?shareId=${this.props.shareId}`;\n    var textField = document.createElement(\"textarea\");\n    textField.innerHTML = link;\n    document.body.appendChild(textField);\n    textField.select();\n    textField.setSelectionRange(0, 99999);\n    document.execCommand(\"copy\");\n    textField.remove();\n  };\n\n  render() {\n    const link = `${window.location.origin}${process.env.PUBLIC_URL}?shareId=${this.props.shareId}`;\n    return (\n      <div className=\"IdeModal\">\n        <Modal show={this.props.modalShow} onClick={this.hideModal} className=\"modal\">\n          <Modal.Header closeButton className=\"modal-header\">\n            <Modal.Title>Code Shared</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"modal-body\">\n            <b>Link</b>\n            <br />\n            {link}\n          </Modal.Body>\n          <Modal.Footer className=\"modal-footer\">\n            <Button variant=\"primary\" onClick={this.copyTextToClipboard}>\n              Copy\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default IdeModal;\n","const axios = require('axios')\n//https://codeaholic2.pravinkanna.me.?shareId=5f3f447a9a2b7b0afe91f75b\nexport const run = async (language_id, source_code, stdin) => {\n    try {\n        const result = await axios.post('/api/ide', {\n            language_id: language_id,\n            source_code: source_code,\n            stdin: stdin\n        })\n        return result;\n    } catch (err) {\n        console.log(err.message);\n    }\n}","const axios = require('axios')\n\nexport const share = async (language_id, source_code) => {\n    try {\n        const shareId = await axios.post(`/api/ide/share`, {\n            language_id: language_id,\n            source_code: source_code,\n        })\n        return shareId;\n    } catch (err) {\n        console.log(err.message);\n    }\n}\n\nexport const getShare = async (shareId) => {\n    try {\n        const result = await axios.get(`/api/ide/share/${shareId}`)\n        return result;\n    } catch (err) {\n        console.log(err.message);\n    }\n}","import React, { Component } from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport IdeNavbar from \"./IdeNavbar\";\nimport IdeEditor from \"./IdeEditor\";\nimport IdeInput from \"./IdeInput\";\nimport IdeOutput from \"./IdeOutput\";\nimport IdeModal from \"./IdeModal\";\nimport \"./Ide.css\";\n\nimport { run } from \"../api/run\";\nimport { share, getShare } from \"../api/share\";\n\nexport class Ide extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      languageId: \"50\",\n      fontSize: 16,\n      code: \"\",\n      input: \"\",\n      output: \"\",\n      result: \"\",\n      shareId: \"\",\n      isError: false,\n      isLoading: false,\n      modalShow: false,\n      width: window.width,\n    };\n\n    // this.updateLanguage = this.updateLanguage.bind(this);\n    // this.updateFontSize = this.updateFontSize.bind(this);\n    // this.updateCode = this.updateCode.bind(this);\n    // this.updateInput = this.updateInput.bind(this);\n    // this.updateOutput = this.updateOutput.bind(this);\n    // this.updateResult = this.updateResult.bind(this);\n    // this.updateShareId = this.updateShareId.bind(this);\n    // this.updateIsError = this.updateIsError.bind(this);\n    // this.updateIsLoading = this.updateIsLoading.bind(this);\n    // this.updateModalShow = this.updateModalShow.bind(this);\n    // this.updateWidth = this.updateWidth.bind(this);\n  }\n\n  componentDidMount() {\n    //Resizing Editor while resizing screen\n    window.addEventListener(\"resize\", this.updateWidth, { passive: false });\n    this.updateWidth();\n\n    //Extracting shareID from URL\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let shareId = params.get(\"shareId\");\n    if (shareId) console.log(this.getSharedCode(shareId));\n  }\n\n  componentWillUnmount() {\n    //Resizing Editor while resizing screen\n    window.removeEventListener(\"resize\", this.updateWidth, { passive: false });\n    this.updateWidth();\n  }\n\n  updateLanguage = (languageId) => {\n    this.setState({\n      languageId: languageId,\n    });\n  };\n\n  updateFontSize = (fontSize) => {\n    fontSize = Number(fontSize);\n    this.setState({\n      fontSize: fontSize,\n    });\n  };\n\n  updateCode = (code) => {\n    this.setState({\n      code: code,\n    });\n  };\n\n  updateInput = (input) => {\n    this.setState({\n      input: input,\n    });\n  };\n\n  updateResult = (result) => {\n    this.setState({\n      result: result,\n    });\n  };\n\n  updateOutput = (output) => {\n    this.setState({\n      output: output,\n    });\n  };\n\n  updateShareId = (shareId) => {\n    this.setState({\n      shareId: shareId,\n    });\n  };\n\n  updateIsError = (isError) => {\n    this.setState({\n      isError: isError,\n    });\n  };\n\n  updateWidth = () => {\n    this.setState({\n      width: window.innerWidth,\n    });\n  };\n\n  updateIsLoading = (bool) => {\n    this.setState({\n      isLoading: bool,\n    });\n  };\n\n  updateModalShow = (bool) => {\n    this.setState({\n      modalShow: bool,\n    });\n  };\n\n  runCode = async () => {\n    try {\n      //Starting Spinner\n      this.updateIsLoading(true);\n\n      //Getting values from state\n      const languageId = this.state.languageId;\n      const code = this.state.code;\n      const input = this.state.input;\n\n      //Passing to run function\n      const result = await run(languageId, code, input);\n\n      //Setting Output in State\n      const output = result.data.data.stdout || result.data.data.stderr || result.data.data.error || result.data.data.compile_output || \"\";\n      this.updateOutput(output);\n\n      //Setting Status ID in Stateas\n      result.data.data.status.id === 3 ? this.updateIsError(false) : this.updateIsError(true);\n\n      //Stopping Spinner\n      this.updateIsLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  shareCode = async () => {\n    //Getting values from state\n    const languageId = this.state.languageId;\n    const code = this.state.code;\n    //Passing to share function\n    const shareId = await share(languageId, code);\n    this.updateShareId(shareId.data.data._id);\n    this.updateModalShow(true);\n  };\n\n  getSharedCode = async (shareId) => {\n    const result = await getShare(shareId);\n    console.log(result);\n    this.updateCode(result.data.data.source_code);\n    this.updateLanguage(result.data.data.language_id);\n  };\n\n  render() {\n    if (this.state.width > 767) {\n      return (\n        <div className=\"Ide\">\n          <SplitPane split=\"horizontal\" allowResize={false}>\n            <IdeNavbar triggerLanguageUpdate={this.updateLanguage} triggerFontSizeUpdate={this.updateFontSize} shareCode={this.shareCode} languageId={this.state.languageId} fontSize={this.state.fontSize} code={this.state.code} />\n            <SplitPane split=\"vertical\" minSize={0} maxSize={-1} defaultSize=\"60%\">\n              <IdeEditor languageId={this.state.languageId} fontSize={this.state.fontSize} triggerCodeUpdate={this.updateCode} isLoading={this.state.isLoading} code={this.state.code} run={this.runCode} />\n              <SplitPane split=\"horizontal\" allowResize={false} defaultSize=\"50%\">\n                <IdeInput triggerInputUpdate={this.updateInput} />\n                <IdeOutput output={this.state.output} isError={this.state.isError} isLoading={this.state.isLoading} />\n              </SplitPane>\n            </SplitPane>\n          </SplitPane>\n          <IdeModal triggerModalShowUpdate={this.updateModalShow} modalShow={this.state.modalShow} shareId={this.state.shareId} />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"Ide\">\n          <SplitPane split=\"horizontal\" allowResize={false}>\n            <IdeNavbar triggerLanguageUpdate={this.updateLanguage} triggerFontSizeUpdate={this.updateFontSize} shareCode={this.shareCode} languageId={this.state.languageId} fontSize={this.state.fontSize} code={this.state.code} />\n            <SplitPane split=\"horizontal\" minSize={0} maxSize={-5} defaultSize=\"50%\">\n              <IdeEditor languageId={this.state.languageId} fontSize={this.state.fontSize} triggerCodeUpdate={this.updateCode} isLoading={this.state.isLoading} code={this.state.code} run={this.runCode} />\n              <SplitPane split=\"horizontal\" allowResize={false} defaultSize=\"50%\">\n                <IdeInput triggerInputUpdate={this.updateInput} />\n                <IdeOutput output={this.state.output} isError={this.state.isError} isLoading={this.state.isLoading} />\n              </SplitPane>\n            </SplitPane>\n          </SplitPane>\n          <IdeModal triggerModalShowUpdate={this.updateModalShow} modalShow={this.state.modalShow} shareId={this.state.shareId} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default Ide;\n","import React, { Component } from \"react\";\nimport { PageView, initGA } from './components/tracking';\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Ide from \"./components/Ide\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    initGA('UA-175900721-1');\n    PageView();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Ide></Ide>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pkLogo.dcec42b2.svg\";"],"sourceRoot":""}