{"version":3,"sources":["components/IdeNavbar.jsx","components/IdeEditor.jsx","components/IdeInput.jsx","components/IdeOutput.jsx","api/run.js","components/Ide.jsx","App.js","serviceWorker.js","index.js","components/pkLogo.svg"],"names":["IdeNavbar","props","languageName","c","cpp","java","python","sizeName","14","16","18","20","handleLanguage","language","setState","triggerLanguageUpdate","handleFontSize","fontSize","triggerFontSizeUpdate","handleShareCode","code","shareCode","alert","state","this","Navbar","variant","expand","className","Brand","href","src","logo","alt","Toggle","aria-controls","Collapse","id","Nav","DropdownButton","title","onSelect","Dropdown","Item","eventKey","Button","onClick","Component","IdeEditor","modes","handleChange","aceEditor","current","editor","getValue","triggerCodeUpdate","handleClick","run","React","createRef","isEmpty","resize","size","disabled","isLoading","Spinner","as","animation","role","aria-hidden","ref","onChange","mode","theme","showPrintMargin","showGutter","focus","highlightActiveLine","placeholder","width","height","setOptions","tabSize","undefined","length","IdeInput","event","triggerInputUpdate","target","value","input","bind","type","IdeOutput","output","statusId","isError","result","status","stdout","stderr","error","compile_output","readOnly","name","style","color","position","top","left","axios","require","language_id","source_code","stdin","a","post","console","log","message","Ide","languageId","updateLanguage","updateFontSize","Number","updateCode","updateInput","updateResult","updateWidth","window","innerWidth","updateIsLoading","bool","runCode","data","addEventListener","passive","removeEventListener","split","allowResize","minSize","maxSize","defaultSize","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.cbeeb30f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Navbar, Nav, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport \"./IdeNavbar.css\";\nimport logo from \"./pkLogo.svg\";\n\nclass IdeNavbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      language: \"c\",\n      fontSize: \"16\",\n    };\n    // this.props.triggerLanguageUpdate(this.state.language);\n    // this.props.triggerFontSizeUpdate(this.state.fontSize);\n  }\n\n  languageName = {\n    c: \"C (GCC 9.2.0)\",\n    cpp: \"C++ (GCC 9.2.0)\",\n    java: \"Java (OpenJDK 13.0.1)\",\n    python: \"Python (3.8.1)\",\n  };\n\n  sizeName = {\n    14: \"14px\",\n    16: \"16px\",\n    18: \"18px\",\n    20: \"20px\",\n  };\n\n  handleLanguage = (language) => {\n    this.setState({\n      language: language,\n    });\n    this.props.triggerLanguageUpdate(language);\n  };\n\n  handleFontSize = (fontSize) => {\n    this.setState({\n      fontSize: fontSize,\n    });\n    this.props.triggerFontSizeUpdate(fontSize);\n  };\n\n  handleShareCode = () => {\n    if (this.props.code) {\n      this.props.shareCode();\n    } else {\n      alert(\"Editor is empty!\");\n    }\n  };\n\n  render() {\n    const { language, fontSize } = this.state;\n    return (\n      <Navbar variant=\"dark\" expand=\"lg\" className=\"Navbar\">\n        <Navbar.Brand href=\"#home\" className=\"NavbarBrand\">\n          <img src={logo} alt=\"logo\" className=\"Logo\" />\n          <span className=\"BrandName\">&nbsp;Pravin IDE</span>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <DropdownButton className=\"languageBtn\" title={this.languageName[language]} onSelect={this.handleLanguage}>\n              <Dropdown.Item className={language === \"c\" ? \"selected\" : \"\"} eventKey=\"c\">\n                C (GCC 9.2.0)\n              </Dropdown.Item>\n              <Dropdown.Item className={language === \"cpp\" ? \"selected\" : \"\"} eventKey=\"cpp\">\n                C++ (GCC 9.2.0)\n              </Dropdown.Item>\n              <Dropdown.Item className={language === \"python\" ? \"selected\" : \"\"} eventKey=\"python\">\n                Python (3.8.1)\n              </Dropdown.Item>\n              <Dropdown.Item className={language === \"java\" ? \"selected\" : \"\"} eventKey=\"java\">\n                Java (OpenJDK 13.0.1)\n              </Dropdown.Item>\n            </DropdownButton>\n\n            <DropdownButton className=\"fontSizeBtn\" title={this.sizeName[fontSize]} onSelect={this.handleFontSize}>\n              <Dropdown.Item className={fontSize === \"14\" ? \"selected\" : \"\"} eventKey=\"14\">\n                14px\n              </Dropdown.Item>\n              <Dropdown.Item className={fontSize === \"16\" ? \"selected\" : \"\"} eventKey=\"16\">\n                16px\n              </Dropdown.Item>\n              <Dropdown.Item className={fontSize === \"18\" ? \"selected\" : \"\"} eventKey=\"18\">\n                18px\n              </Dropdown.Item>\n              <Dropdown.Item className={fontSize === \"20\" ? \"selected\" : \"\"} eventKey=\"20\">\n                20px\n              </Dropdown.Item>\n            </DropdownButton>\n\n            <Button className=\"share\" onClick={this.handleShareCode}>\n              <i className=\"fas fa-share-alt\"></i>\n            </Button>\n\n            <Button className=\"login\" onClick={this.handleShareCode}>\n              Login\n            </Button>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default IdeNavbar;\n","import React, { Component } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport \"./IdeEditor.css\";\n\nimport \"ace-builds/src-min-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-min-noconflict/mode-python\";\nimport \"ace-builds/src-min-noconflict/mode-java\";\n\nimport \"ace-builds/webpack-resolver\";\n\nclass IdeEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.aceEditor = React.createRef();\n    this.state = {\n      isEmpty: true,\n    };\n  }\n\n  modes = {\n    c: \"c_cpp\",\n    cpp: \"c_cpp\",\n    java: \"java\",\n    python: \"python\",\n  };\n\n  handleChange = () => {\n    const code = this.aceEditor.current.editor.getValue();\n    this.props.triggerCodeUpdate(code);\n  };\n\n  handleClick = () => {\n    this.props.run();\n  };\n\n  componentDidUpdate() {\n    this.aceEditor.current.editor.resize();\n  }\n\n  render() {\n    const { language, fontSize } = this.props;\n\n    return (\n      <div className=\"IdeEditor IdeComponent\">\n        <ul className=\"EditorNav\">\n          <li>\n            <p>Your&nbsp;Code</p>\n          </li>\n          <li>\n            <Button variant=\"primary\" size=\"sm\" onClick={this.handleClick} disabled={isEmpty(this.props.code) || this.props.isLoading}>\n              {this.props.isLoading ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> : \"Run\"}\n            </Button>\n          </li>\n        </ul>\n\n        <AceEditor\n          ref={this.aceEditor}\n          onChange={this.handleChange}\n          mode={this.modes[language]}\n          theme=\"monokai\"\n          showPrintMargin={false}\n          showGutter={true}\n          focus={true}\n          fontSize={fontSize}\n          highlightActiveLine={false}\n          placeholder={\"Write your code Here\"}\n          width=\"100%\"\n          height=\"100%\"\n          setOptions={{\n            tabSize: 4,\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst isEmpty = (code) => {\n  if (!code || code === undefined || code === \"\" || code.length === 0) return true;\n  return false;\n};\n\nexport default IdeEditor;\n","import React, { Component } from \"react\";\nimport \"./IdeInput.css\";\n\nexport class IdeInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { input: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = (event) => {\n    this.props.triggerInputUpdate(event.target.value);\n  };\n\n  render() {\n    return (\n      <div className=\"IdeComponent IdeInput\">\n        <p>Input</p>\n        <textarea type=\"text\" onChange={this.handleChange}></textarea>\n      </div>\n    );\n  }\n}\n\nexport default IdeInput;\n","import React, { Component } from \"react\";\nimport \"./IdeOutput.css\";\n\nimport { Spinner } from \"react-bootstrap\";\nexport class IdeOutput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      output: \"\",\n      statusId: \"\",\n      isError: false,\n    };\n  }\n\n  render() {\n    let output,\n      statusId,\n      isError = false;\n    const spinnerStyle = { color: \"white\", position: \"absolute\", top: \"50%\", left: \"47%\" };\n    if (this.props.result) {\n      statusId = this.props.result.status.id;\n      if (statusId != 3) isError = true;\n      output = this.props.result.stdout || this.props.result.stderr || this.props.result.error || this.props.result.compile_output || \"\";\n    }\n    return (\n      <div className=\"IdeComponent IdeOutput\">\n        <p>Output</p>\n        <textarea readOnly name=\"output\" style={{ color: isError ? \"#ff0033\" : \"#ffffff\" }} disabled={this.props.isLoading} value={this.props.isLoading ? \"\" : output}></textarea>\n        {this.props.isLoading ? <Spinner style={spinnerStyle} className=\"spinner\" as=\"span\" animation=\"border\" size=\"lg\" role=\"status\" aria-hidden=\"true\" /> : \"Run\"}\n      </div>\n    );\n  }\n}\n\nexport default IdeOutput;\n","const axios = require('axios')\nexport const run = async (language_id, source_code, stdin) => {\n    try {\n        const result = await axios.post('/api/ide', {\n            language_id: language_id,\n            source_code: source_code,\n            stdin: stdin\n        })\n        return result;\n    } catch (err) {\n        console.log(err.message);\n    }\n}","import React, { Component } from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport IdeNavbar from \"./IdeNavbar\";\nimport IdeEditor from \"./IdeEditor\";\nimport IdeInput from \"./IdeInput\";\nimport IdeOutput from \"./IdeOutput\";\nimport \"./Ide.css\";\n\nimport { run } from \"../api/run\";\n\nexport class Ide extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      language: \"c\",\n      fontSize: 16,\n      code: \"\",\n      input: \"\",\n      output: \"\",\n      result: \"\",\n      isLoading: false,\n      width: window.width,\n    };\n\n    this.updateLanguage = this.updateLanguage.bind(this);\n    this.updateFontSize = this.updateFontSize.bind(this);\n    this.updateCode = this.updateCode.bind(this);\n    this.updateInput = this.updateInput.bind(this);\n    this.updateResult = this.updateResult.bind(this);\n    this.updateIsLoading = this.updateIsLoading.bind(this);\n  }\n\n  languageId = {\n    c: \"50\",\n    cpp: \"54\",\n    java: \"62\",\n    python: \"71\",\n  };\n\n  updateLanguage = (language) => {\n    this.setState({\n      language: language,\n    });\n  };\n\n  updateFontSize = (fontSize) => {\n    fontSize = Number(fontSize);\n    this.setState({\n      fontSize: fontSize,\n    });\n  };\n\n  updateCode = (code) => {\n    this.setState({\n      code: code,\n    });\n  };\n\n  updateInput = (input) => {\n    this.setState({\n      input: input,\n    });\n  };\n\n  updateResult = (result) => {\n    this.setState({\n      result: result,\n    });\n  };\n\n  updateWidth = () => {\n    this.setState({\n      width: window.innerWidth,\n    });\n  };\n\n  updateIsLoading = (bool) => {\n    this.setState({\n      isLoading: bool,\n    });\n  };\n\n  runCode = async () => {\n    this.updateIsLoading(true);\n    const languageId = this.languageId[this.state.language];\n    const code = this.state.code;\n    const input = this.state.input;\n    const result = await run(languageId, code, input);\n    this.updateResult(result.data.data);\n    this.updateIsLoading(false);\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWidth, { passive: false });\n    this.updateWidth();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWidth, { passive: false });\n  }\n\n  render() {\n    if (this.state.width > 767) {\n      return (\n        <div className=\"Ide\">\n          <SplitPane split=\"horizontal\" allowResize={false}>\n            <IdeNavbar triggerLanguageUpdate={this.updateLanguage} triggerFontSizeUpdate={this.updateFontSize} shareCode={this.shareCode} code={this.state.code} />\n            <SplitPane split=\"vertical\" minSize={0} maxSize={-1} defaultSize=\"60%\">\n              <IdeEditor language={this.state.language} fontSize={this.state.fontSize} triggerCodeUpdate={this.updateCode} isLoading={this.state.isLoading} code={this.state.code} run={this.runCode} />\n              <SplitPane split=\"horizontal\" allowResize={false} defaultSize=\"50%\">\n                <IdeInput triggerInputUpdate={this.updateInput} />\n                <IdeOutput result={this.state.result} isLoading={this.state.isLoading} />\n              </SplitPane>\n            </SplitPane>\n          </SplitPane>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"Ide\">\n          <SplitPane split=\"horizontal\" allowResize={false}>\n            <IdeNavbar triggerLanguageUpdate={this.updateLanguage} triggerFontSizeUpdate={this.updateFontSize} shareCode={this.shareCode} code={this.state.code} />\n            <SplitPane split=\"horizontal\" minSize={0} maxSize={-5} defaultSize=\"50%\">\n              <IdeEditor language={this.state.language} fontSize={this.state.fontSize} triggerCodeUpdate={this.updateCode} isLoading={this.state.isLoading} code={this.state.code} run={this.runCode} />\n              <SplitPane split=\"horizontal\" allowResize={false} defaultSize=\"50%\">\n                <IdeInput triggerInputUpdate={this.updateInput} />\n                <IdeOutput result={this.state.result} isLoading={this.state.isLoading} />\n              </SplitPane>\n            </SplitPane>\n          </SplitPane>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Ide;\n","import React, { Component } from \"react\";\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Ide from \"./components/Ide\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Ide></Ide>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pkLogo.dcec42b2.svg\";"],"sourceRoot":""}